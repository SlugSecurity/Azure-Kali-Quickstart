{
	"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"username": {
			"type": "string",
			"metadata": {
				"description": "Username for the Virtual Machine."
			}
		},
		"authenticationType": {
			"type": "string",
			"defaultValue": "sshPublicKey",
			"allowedValues": [
				"sshPublicKey",
				"password"
			],
			"metadata": {
				"description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
			}
		},
		"adminPasswordOrKey": {
			"type": "securestring",
			"metadata": {
				"description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
			}
		}
	},
	"variables": {
		"location": "[resourceGroup().location]",
		"vmSize": "Standard_D4s_v3",
		"imagePublisher": "kali-linux",
		"imageOffer": "kali",
		"imageSku": "kali-2023-4",
		"nicName": "SlugVMNic",
		"addressPrefix": "10.0.0.0/16",
		"subnetName": "Subnet",
		"subnetPrefix": "10.0.0.0/24",
		"publicIPAddressName": "SlugPublicIP",
		"publicIPAddressType": "Dynamic",
		"vmName": "SlugVM",
		"virtualNetworkName": "SlugVNET",
		"subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
		"linuxConfiguration": {
			"disablePasswordAuthentication": true,
			"ssh": {
				"publicKeys": [
					{
						"path": "[concat('/home/', parameters('username'), '/.ssh/authorized_keys')]",
						"keyData": "[parameters('adminPasswordOrKey')]"
					}
				]
			}
		},
		"networkSecurityGroupName": "SlugNSG"
	},
	"resources": [
		{
			"apiVersion": "2020-08-01",
			"type": "Microsoft.Network/publicIPAddresses",
			"name": "[variables('publicIPAddressName')]",
			"location": "[variables('location')]",
			"properties": {
				"publicIPAllocationMethod": "[variables('publicIPAddressType')]"
			}
		},
		{
			"comments": "Default Network Security Group for template",
			"type": "Microsoft.Network/networkSecurityGroups",
			"apiVersion": "2020-07-01",
			"name": "[variables('networkSecurityGroupName')]",
			"location": "[variables('location')]",
			"properties": {
				"securityRules": [
					{
						"name": "default-allow-22",
						"properties": {
							"priority": 1000,
							"access": "Allow",
							"direction": "Inbound",
							"destinationPortRange": "22",
							"protocol": "Tcp",
							"sourceAddressPrefix": "*",
							"sourcePortRange": "*",
							"destinationAddressPrefix": "*"
						}
					},
					{
						"name": "default-allow-3389",
						"properties": {
							"priority": 1001,
							"access": "Allow",
							"direction": "Inbound",
							"destinationPortRange": "3389",
							"protocol": "Tcp",
							"sourceAddressPrefix": "*",
							"sourcePortRange": "*",
							"destinationAddressPrefix": "*"
						}
					}
				]
			}
		},
		{
			"apiVersion": "2020-07-01",
			"type": "Microsoft.Network/virtualNetworks",
			"name": "[variables('virtualNetworkName')]",
			"location": "[variables('location')]",
			"dependsOn": [
				"[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
			],
			"properties": {
				"addressSpace": {
					"addressPrefixes": [
						"[variables('addressPrefix')]"
					]
				},
				"subnets": [
					{
						"name": "[variables('subnetName')]",
						"properties": {
							"addressPrefix": "[variables('subnetPrefix')]",
							"networkSecurityGroup": {
								"id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
							}
						}
					}
				]
			}
		},
		{
			"apiVersion": "2020-07-01",
			"type": "Microsoft.Network/networkInterfaces",
			"name": "[variables('nicName')]",
			"location": "[variables('location')]",
			"dependsOn": [
				"[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]",
				"[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
			],
			"properties": {
				"ipConfigurations": [
					{
						"name": "ipconfig1",
						"properties": {
							"privateIPAllocationMethod": "Dynamic",
							"publicIPAddress": {
								"id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
							},
							"subnet": {
								"id": "[variables('subnetRef')]"
							}
						}
					}
				]
			}
		},
		{
			"apiVersion": "2022-11-01",
			"type": "Microsoft.Compute/virtualMachines",
			"name": "[variables('vmName')]",
			"location": "[variables('location')]",
			"dependsOn": [
				"[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
			],
			"properties": {
				"hardwareProfile": {
					"vmSize": "[variables('vmSize')]"
				},
				"osProfile": {
					"computerName": "[variables('vmName')]",
					"adminUsername": "[parameters('username')]",
					"adminPassword": "[parameters('adminPasswordOrKey')]",
					"linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
				},
				"storageProfile": {
					"imageReference": {
						"publisher": "[variables('imagePublisher')]",
						"offer": "[variables('imageOffer')]",
						"sku": "[variables('imageSku')]",
						"version": "latest"
					},
					"osDisk": {
						"name": "[concat(variables('vmName'),'_OSDisk')]",
						"caching": "ReadWrite",
						"createOption": "FromImage"
					}
				},
				"networkProfile": {
					"networkInterfaces": [
						{
							"id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
						}
					]
				}
			},
			"plan": {
				"name": "[variables('imageSku')]",
				"publisher": "[variables('imagePublisher')]",
				"product": "[variables('imageOffer')]"
			}
		},
		{
			"type": "Microsoft.Compute/virtualMachines/extensions",
			"name": "[concat(variables('vmName'),'/setup')]",
			"apiVersion": "2020-12-01",
			"location": "[variables('location')]",
			"dependsOn": [
				"[resourceId('Microsoft.Compute/virtualMachines', variables('vmName'))]"
			],
			"properties": {
				"publisher": "Microsoft.Azure.Extensions",
				"type": "CustomScript",
				"typeHandlerVersion": "2.0",
				"autoUpgradeMinorVersion": true,
				"settings": {
					"fileUris": [
						"https://raw.githubusercontent.com/SlugSecurity/Azure-Kali-Quickstart/main/scripts/setup.sh"
					],
					"commandToExecute": "bash setup.sh"
				}
			}
		}
	]
}